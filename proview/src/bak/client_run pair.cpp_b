#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <sys/time.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <errno.h>
#include <fcntl.h>
#include <unistd.h>
#include <pthread.h>
#include <math.h>
#include <error.h>

#include "proc_agv.h"
ssize_t write(int fd, void const* vaddr, size_t size);
ssize_t read_s(int fd, void* vaddr, size_t size);
int client_run(int fd_remote)
{
    int fd = dup(fd_remote);
    printf("dup() fd=%d error=%d\n",fd,errno);
    if(fd<=0) return fd;

    int val = fcntl(fd, F_GETFL);
    if(val<=0) return val;
    val &= ~O_NONBLOCK;
    int ret = fcntl(fd, F_SETFL, val);
    // int ret = fcntl(fd, F_SETFL, ~O_NONBLOCK);
    printf("fcntl() ret=%d error=%d\n",ret,errno);
    if(ret<=0) return ret;
    char tmp[512];
    while(1)
    {
        //sleep(1);
        memset(tmp,0,sizeof(tmp));
        read_s(fd,tmp,512);
        printf("read -> %s \n",tmp);
    }

    close(fd);
    return EXIT_SUCCESS;
}